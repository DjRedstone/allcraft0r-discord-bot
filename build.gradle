plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

group 'fr.djredstone.allcraft0rDiscordBot'
version '1.0'

repositories {
    mavenCentral()
    maven {
        url 'https://m2.dv8tion.net/releases'
    }
}

test {
    useJUnitPlatform()
}

dependencies {
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.8.2'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.8.2'
    implementation group: 'org.javacord', name: 'javacord', version: '3.4.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.17.2'
    runtimeOnly group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.2'
    implementation group: 'net.dv8tion', name: 'JDA', version: '5.0.0-alpha.12'
    implementation group: 'org.javatuples', name: 'javatuples', version: '1.2'
    implementation group: 'com.sedmelluq', name: 'lavaplayer', version: '1.3.78'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.11'
}

task stage(dependsOn: ['build', 'shadowJar', 'test'])
build.mustRunAfter test

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

def targetJavaVersion = 16
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

jar {
    manifest{
        attributes 'Class-Path': '/libs/allcraft0r-discord-bot-1.0.jar', 'Main-Class': 'fr.djredstone.allcraft0rDiscordBot.Main'
    }
}